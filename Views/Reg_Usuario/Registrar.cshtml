
@{
    ViewBag.Title = "Registrar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model TursimoReal.Models.Usuarios

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>IA Gamma - User Registration</title>
    <link rel="stylesheet" href="~/Content/bootstrap-dark-mode.dark.min.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <style>
        #fondo {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 50%;
        }

        .content-container {
            overflow: hidden;
        }
    </style>

</head>
<body class="content-container">
    <img id="fondo" src="~/content/Imagenes/Background.png" alt="Fondo" />
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-white text-center">
                        <h3 class="card-title">Registrar</h3>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("RegistrarUsuarios", "Reg_Usuario", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                        {
                            <div class="form-group">
                                <label class="form-label" for="Nombre">Nombre</label>
                                <div class="invalid-feedback">Por favor, ingrese su nombre.</div>
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", required = "required" } })

                            </div>

                            <div class="form-group">
                                <label class="form-label" for="Apellido">Apellido</label>
                                <div class="invalid-feedback">Por favor, ingrese su apellido.</div>
                                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", required = "required" } })

                            </div>

                            <div class="form-group">
                                <label class="form-label" for="Correo">Correo</label>
                                <div class="invalid-feedback">Por favor, ingrese un correo válido.</div>
                                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", required = "required", type = "email" } })

                            </div>

                            <div class="form-group">
                                <label class="form-label" for="Clave">Contraseña</label>
                                <div class="invalid-feedback">Por favor, ingrese una contraseña.</div>
                                @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control", required = "required", type = "password" } })

                            </div>

                            <div class="form-group">
                                <label class="form-label" for="Numero">Número</label>
                                <div class="invalid-feedback">Por favor, ingrese su número de teléfono.</div>
                                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", required = "required" } })

                            </div>

                            <div class="form-group">
                                <label class="form-label" for="IdRol">Rol</label>
                                <div class="invalid-feedback"> Por favor, ingrese un rol.   </div>
                                @Html.TextBoxFor(model => model.IdRol, new { @class = "form-control", required = "required" })
                            </div>
                            <hr />
                            <input type="submit" value="Registrar" class="btn btn-primary" />
                            <button type="button" value="Volver" class="btn btn-primary" onclick="location.href='@Url.Action("Login", "LG_Usuarios")'">Volver</button>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>

    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
</body>
</html>